<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="park">

	<!-- 쪽지보내기->보내는사람 -->
 	<insert id="insertMailbox">
		<selectKey keyProperty="msgNo1" resultType="int" order="BEFORE">
			select nextval(message1_seq)
		</selectKey>
		INSERT INTO message1 (msgNo1, title, content, send, receive) 
		VALUES(#{msgNo1}, #{title}, #{content}, #{send},#{receive})
	</insert>
	
		<!-- 쪽지보내기->받는사람   -->
 	<insert id="insertMailbox2" >
 		<selectKey keyProperty="msgNo2" resultType="int" order="BEFORE">
			select nextval(message2_seq)
		</selectKey>
		INSERT INTO message2 (msgNo1, msgNo2, receive) 
		VALUES(#{msgNo1}, #{msgNo2}, #{receive})
	</insert>
	
	
	<!-- 받은쪽지함 -->
	<select id="mailboxReceive" parameterType="seMessageDTO" resultType="seMessageDTO">
		SELECT 
		m1.*, m2.msgNo2, m2.receive, m2.confirm  
		FROM message1 m1, message2 m2 
		WHERE m1.msgNo1=m2.msgNo1 
		AND m2.receive=#{receive} 
		ORDER BY m1.msgNo1 DESC
		LIMIT #{startPage}, #{lastPage}
	</select>
	
	<!-- 받은쪽지함 상세보기 -->
	<select id="mailboxDetail" resultType="seMessageDTO" parameterType="seMessageDTO">
		<!--SELECT * FROM message1 WHERE msgNo1=${msgNo1} --> 
		SELECT * FROM message1 WHERE msgNo1=#{msgNo1} 
	</select>
	
	<!-- 보낸쪽지함 -->
	<select id="mailboxSend" resultType="seMessageDTO" parameterType="seMessageDTO">
		SELECT 
		m1.*, m2.msgNo2, m2.receive, m2.confirm  
		FROM message1 m1, message2 m2 
		WHERE m1.msgNo1=m2.msgNo1 
		AND m1.send=#{send} 
		ORDER BY m1.msgNo1 DESC
		LIMIT #{startPage}, #{lastPage}
	</select>
	
	<!-- 쪽지삭제 -->
	<delete id="mailboxDelete" >
    DELETE FROM message1 WHERE msgNo1=${msgNo1};
	</delete>
	
	<!-- 체크박스로 삭제 -->
	<delete id="checkDelete" parameterType="Integer" >
    DELETE FROM message1 WHERE msgNo1=${id};
	</delete>
	
	
	<!-- 받은쪽지함 검색 --> 
	<select id="searchMailboxReceive" resultType="seMessageDTO" parameterType="map">
    SELECT * FROM message1 m1, message2 m2 
	WHERE m1.msgNo1 = m2.msgNo1 AND
         ((#{msgSearchList} = 'send' AND send LIKE #{msgSearchText}) OR
         (#{msgSearchList} = 'title' AND title LIKE #{msgSearchText}))
	</select>
	
	<!-- 보낸쪽지함 검색 --> 
	<select id="searchMailboxSend" resultType="seMessageDTO" parameterType="map">
    SELECT * FROM message1 m1, message2 m2 
    WHERE m1.msgNo1 = m2.msgNo1 AND         
          ((#{msgSearchList2} = 'receive' AND m2.receive LIKE #{msgSearchText2}) OR
          (#{msgSearchList2} = 'title' AND m1.title LIKE #{msgSearchText2}))
	</select>
	
	
	<!-- 받은쪽지함 count -->
	<select id="receiveTotalcount" resultType="int">
		SELECT 
		COUNT(*) 
		FROM message1 m1, message2 m2 
		WHERE m1.msgNo1=m2.msgNo1 
		AND m2.receive=#{receive}
		ORDER BY m1.msgNo1 DESC
	</select>
	
	<!-- 보낸쪽지함 count -->
	<select id="sendTotalcount" resultType="int">
		SELECT 
		COUNT(*) 
		FROM message1 m1, message2 m2 
		WHERE m1.msgNo1=m2.msgNo1 
		AND m1.send=#{send}
		ORDER BY m1.msgNo1 DESC
	</select>
	

</mapper>
